import React, { useState } from "react";

export default function MatchCard({ match, username, onPredictionSubmitted }) {
  const [selected, setSelected] = useState(null);
  const [joker, setJoker] = useState(false);
  const [stake, setStake] = useState(1);
  const API = "http://localhost:5000";

  const submitPrediction = async () => {
    if (selected == null) {
      if (!window.confirm("Je hebt niets ingevuld â€” wil je dit als niet ingezet registreren?")) {
        return;
      }
    }
    const body = {
      playerName: username,
      matchId: match._id,
      predicted: selected,
      joker,
      stake
    };
    const res = await fetch(`${API}/api/predictions`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(body)
    });
    if (res.ok) {
      alert("Voorspelling opgeslagen");
      if (onPredictionSubmitted) onPredictionSubmitted();
    } else {
      const err = await res.json();
      alert("Fout: " + (err.error || "onbekend"));
    }
  };

  const disabled = !match.published || match.closed;

  return (
    <div style={{ border: "1px solid #ccc", padding: 12, marginBottom: 8, borderRadius: 6 }}>
      <div>
        <strong>Ronde {match.round}</strong> - {match.homeTeam} vs {match.awayTeam}
        {match.superRound && " (Super)"}
        {match.jokerAllowed && " ðŸŽ¯"}
      </div>
      <div style={{ marginTop: 8 }}>
        <div>Odds: Thuis {match.odds.homeWin} | Gelijk {match.odds.draw} | Uit {match.odds.awayWin}</div>
        <div style={{ marginTop: 6 }}>
          {disabled ? (
            <em>{!match.published ? "Nog niet gepubliceerd" : "Voorspellingen gesloten"}</em>
          ) : (
            <>
              <div>
                <label><input type="radio" name={`pred-${match._id}`} onChange={() => setSelected(1)} /> Thuis (1)</label>
                <label style={{ marginLeft: 8 }}><input type="radio" name={`pred-${match._id}`} onChange={() => setSelected(3)} /> Gelijk (3)</label>
                <label style={{ marginLeft: 8 }}><input type="radio" name={`pred-${match._id}`} onChange={() => setSelected(2)} /> Uit (2)</label>
              </div>
              <div style={{ marginTop: 6 }}>
                {match.jokerAllowed && <label><input type="checkbox" checked={joker} onChange={e => setJoker(e.target.checked)} /> Joker inzetten</label>}
                <label style={{ marginLeft: 8 }}>Inzet: â‚¬ <input style={{ width: 60 }} value={stake} onChange={e => setStake(Number(e.target.value) || 1)} /></label>
              </div>
              <button onClick={submitPrediction} style={{ marginTop: 8 }}>Opslaan</button>
            </>
          )}
        </div>
      </div>
    </div>
  );
}
